openapi: "3.0.1"
info:
  title: Gravitate Health Focusing API Interface
  version: MVP2
  description: Gravitate Health focusing. Preprocessing and lens selection
  contact: {}
servers:
  - url: https://fosps.gravitatehealth.eu
paths:
  /focusing/preprocessing:
    get:
      tags:
        - Preprocessing
      description: Lists all available preprocessors.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreprocessingList"
  /focusing/preprocessing/{epiId}:
    post:
      tags:
        - Preprocessing
      description: Executes preprocessing on an ePI, adding semantic annotation to the ePI's leaflet sections. Desired response "Content-Type" (JSON or HTML) must be sent in the "Accept" header.
      parameters:
        - $ref: "#/components/parameters/epiId"
        - $ref: "#/components/parameters/preprocessorsList"
      responses:
        "200":
          $ref: "#/components/responses/200focus"
        "422":
          $ref: "#/components/responses/422InvalidData"
  /focusing/lenses:
    get:
      tags:
        - Lenses
      description: Lists all available lenses.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LensesList"
  /focusing/focus/{epiId}:
    post:
      tags:
        - Lenses
      description: >
        Preprocesses and focuses an ePI based on a Patient's IPS.
        The epiId must exist, and you can specify the Patient's IPS in 2 ways:
          
          1. Writing the patientId on query param.
          2. Passing all the IPS JSON Document through the request's body.

        Desired response "Content-Type" (JSON or HTML) must be sent in the "Accept" header.
        The response contains the ePI with HTML tags and the following CSS classes: "highlight", "collapse".
        "Highlight" CSS class is used to remark information. It has precedence over the collapse class.
        "Collapse" CSS class is used to hide information.
      requestBody:
        description: This could have an IPS JSON Document if you dont specify patientId
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsFocusing"
      parameters:
        - $ref: "#/components/parameters/epiId"
        - $ref: "#/components/parameters/preprocessorsList"
        - $ref: "#/components/parameters/lensesList"
        - $ref: "#/components/parameters/patientIdquery"
      responses:
        "200":
          $ref: "#/components/responses/200focus"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "422":
          $ref: "#/components/responses/422InvalidData"
  /focusing/focus:
    post:
      tags:
        - Lenses
      description: >
        Preprocesses and focuses an ePI based on a Patients's IPS.
        You must introduce the full ePI JSON Document on the request's body, and you can specify the Patient's IPS in 2 ways:

          1. Writing the patientId on query param.
          2. Passing all the IPS JSON Document through the request's body.

        Desired response "Content-Type" (JSON or HTML) must be sent in the "Accept" header.
        The response contains the ePI with HTML tags and the following CSS classes: "highlight", "collapse".
        "Highlight" CSS class is used to remark information. It has precedence over the collapse class.
        "Collapse" CSS class is used to hide information.
      requestBody:
        description: The body must have an ePI JSON Document, and could have an IPS JSON Document in case you dont specify a patientID on query params. Body should be written this way in case you have ePI and IPS Documents. In case you write a patientId on query parameter, you should delete IPS field from body.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/bodyWithIPSandEPI"
      parameters:
        - $ref: "#/components/parameters/preprocessorsList"
        - $ref: "#/components/parameters/lensesList"
        - $ref: "#/components/parameters/patientIdquery"
      responses:
        "200":
          $ref: "#/components/responses/200focus"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "422":
          $ref: "#/components/responses/422InvalidData"

components:
  schemas:
    bodyWithIPSandEPI:
        type: object
        properties:
          epi:
            type: string
            example: Full ePI JSON Document should be inside this parameter
          ips:
            type: string
            example: Full IPS JSON Document should be inside this parameter
    PreprocessingList:
      type: object
      properties:
        preprocessors:
          type: array
          items:
            type: string
          example: ["preprocessor1", "preprocessor2", "preprocessor3"]
    LensesList:
      type: object
      properties:
        lenses:
          type: array
          items:
            type: string
          example: ["lense-name1", "lense-name2", "lense-name3"]
    ipsFocusing:
      type: object
      properties:
        ips:
          type: string
          example: Full IPS JSON Document should be inside this parameter
    ePI-html:
      type: string
      example: "<html> ePI in HTML format </html>"
    ePI-json:
      type: object
      properties:
        resourceType:
          type: object
        id:
          type: string
        meta:
          type: object
        identifier:
          type: object
        type:
          type: string
        timestamp:
          type: string
        entry:
          type: object
  parameters:
    epiId:
      in: path
      name: epiId
      description: ePI id to preprocess.
      required: true
      schema:
        type: string
    patientIdquery:
      in: query
      name: patientId
      description: Patient id, that is required only if you dont't specify a full IPS JSON Document on request's body.
      required: false
      schema:
        type: string
    preprocessorsList:
      in: query
      name: preprocessors
      description: List of preprocessors to be executed on the ePI. If parameter is absent, all preprocessors will be executed.
      required: false
      schema:
        type: array
        items:
          type: string
    lensesList:
      in: query
      name: lenses
      description: List of lenses to be applied.
      required: true
      schema:
        type: array
        items:
          type: string
    responseContentType:
      in: query
      name: responseContentType
      description: Select response format in JSON or HTML.
      required: true
      schema:
        type: string
        enum: [html, json]

  responses:
    200focus:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ePI-json"
        text/html:
          schema:
            $ref: "#/components/schemas/ePI-html"
    422InvalidData:
      description: Invalid Data
      content:
        application/json:
          schema:
            type: object
            properties:
              messsage:
                type: string
                default: "Given data is invalid"
              reason:
                type: string
                default: "Reason"
    400BadRequest:
      description: Bad Request
      content: 
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                default: "Bad request"
              reason:
                type: string
                default: "Reason"